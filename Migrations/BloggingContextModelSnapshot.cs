// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace TestAddDatabaseDescription.Migrations
{
    [DbContext(typeof(BloggingContext))]
    partial class BloggingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestAddDatabaseDescription.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Url")
                        .HasAnnotation("Relational:Comment", "Url 地址");

                    b.HasKey("BlogId");

                    b.ToTable("Blogs");

                    b.HasAnnotation("Relational:Comment", "Blog 表");
                });

            modelBuilder.Entity("TestAddDatabaseDescription.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BlogId");

                    b.Property<string>("Content")
                        .HasAnnotation("Relational:Comment", "文章内容");

                    b.Property<int>("PostType")
                        .HasAnnotation("Relational:Comment", "博客文章类型(0: 大数据; 1: 小数据)");

                    b.Property<string>("Title")
                        .HasAnnotation("Relational:Comment", "文章标题");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasAnnotation("Relational:Comment", "文章");
                });

            modelBuilder.Entity("TestAddDatabaseDescription.Post", b =>
                {
                    b.HasOne("TestAddDatabaseDescription.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
